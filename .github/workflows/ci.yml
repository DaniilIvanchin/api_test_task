name: CI Pipeline

on:
  pull_request:
    branches: [ main, test-branch ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - run: |
          pip install -r requirements.txt
          ruff check .

  test:
    runs-on: ubuntu-latest
    needs: lint

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB_AUTH: ${{ secrets.POSTGRES_DB_AUTH }}
      POSTGRES_DB_UNIVERSITY: ${{ secrets.POSTGRES_DB_UNIVERSITY }}
      AUTH_SERVICE_INTERNAL_URL: ${{ secrets.AUTH_SERVICE_INTERNAL_URL }}
      AUTH_SERVICE_API_URL: ${{ secrets.AUTH_SERVICE_API_URL }}
      UNIVERSITY_SERVICE_INTERNAL_URL: ${{ secrets.UNIVERSITY_SERVICE_INTERNAL_URL }}
      UNIVERSITY_SERVICE_API_URL: ${{ secrets.UNIVERSITY_SERVICE_API_URL }}
      PYTHONPATH: .

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - run: |
          pip install -r requirements.txt
          docker compose up -d --build
          
          echo "Waiting for services to start"
          for i in {1..30}; do
            if curl -s http://localhost:8000/health > /dev/null && curl -s http://localhost:8001/health > /dev/null; then
              echo "Services are ready"
              break
            fi
            sleep 5
          done
          
          echo "Running tests"
          pytest --alluredir=allure-results || true
        continue-on-error: true

  report:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Publish Allure Report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report