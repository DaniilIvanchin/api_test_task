name: GitHub Actions Test

on:
  pull_request:
    branches: [ main, test-branch ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB_AUTH: auth_db
      POSTGRES_DB_UNIVERSITY: university_db
      AUTH_SERVICE_INTERNAL_URL: http://auth-service:8000
      AUTH_SERVICE_API_URL: http://localhost:8000
      UNIVERSITY_SERVICE_INTERNAL_URL: http://university-service:8001
      UNIVERSITY_SERVICE_API_URL: http://localhost:8001

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install ruff pytest allure-pytest requests faker docker

      - name: Run Ruff linter
        run: ruff check . || echo "Ruff found style issues"

      - name: Start Docker Compose
        run: docker compose up -d --build

      - name: Wait for services to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8000/health > /dev/null && curl -s http://localhost:8001/health > /dev/null; then
              exit 0
            fi
            sleep 5
          done
          exit 1

      - name: Run API tests
        env:
          PYTHONPATH: .
        run: pytest tests/ --alluredir=allure-results
        continue-on-error: true

      - name: Install Allure CLI
        run: |
          ALLURE_VERSION=2.27.0
          wget -q https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.zip
          unzip -q allure-${ALLURE_VERSION}.zip -d $HOME/allure
          echo "$HOME/allure/allure-${ALLURE_VERSION}/bin" >> $GITHUB_PATH
          export PATH="$HOME/allure/allure-${ALLURE_VERSION}/bin:$PATH"
          allure --version

      - name: Generate Allure report
        run: |
          mkdir -p allure-report
          if [ -d "allure-results" ] && [ "$(ls -A allure-results)" ]; then
            allure generate allure-results --clean -o allure-report
          fi
          ls -la allure-report

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          force_orphan: true