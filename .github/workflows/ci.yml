name: CI Pipeline

on:
  pull_request:
    branches: [ main, test-branch ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - run: |
          pip install ruff
          ruff check .

  test:
    runs-on: ubuntu-latest
    needs: lint
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB_AUTH: ${{ secrets.POSTGRES_DB_AUTH }}
      POSTGRES_DB_UNIVERSITY: ${{ secrets.POSTGRES_DB_UNIVERSITY }}
      AUTH_SERVICE_INTERNAL_URL: ${{ secrets.AUTH_SERVICE_INTERNAL_URL }}
      AUTH_SERVICE_API_URL: ${{ secrets.AUTH_SERVICE_API_URL }}
      UNIVERSITY_SERVICE_INTERNAL_URL: ${{ secrets.UNIVERSITY_SERVICE_INTERNAL_URL }}
      UNIVERSITY_SERVICE_API_URL: ${{ secrets.UNIVERSITY_SERVICE_API_URL }}
      PYTHONPATH: .

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - run: |
          pip install -r requirements.txt
          docker compose up -d --build
          mkdir -p allure-results
          pytest --alluredir=allure-results || true
        continue-on-error: true

  report:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Install Allure CLI
        run: |
          ALLURE_VERSION=2.27.0
          wget -q https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.zip
          unzip -q allure-${ALLURE_VERSION}.zip -d $HOME/allure
          echo "$HOME/allure/allure-${ALLURE_VERSION}/bin" >> $GITHUB_PATH
          export PATH="$HOME/allure/allure-${ALLURE_VERSION}/bin:$PATH"
          allure --version

      - name: Generate Allure Report
        run: |
          mkdir -p allure-report
          if [ -d "allure-results" ] && [ "$(ls -A allure-results)" ]; then
            echo "Generating Allure report"
            allure generate allure-results --clean -o allure-report
          else
          fi
          ls -la allure-report

      - name: Publish Allure Report
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          force_orphan: true